arr = [10, 20, 30, 40, 50, 60, 70, 80, 90]
to_find = 70

################################################################################

def target_is_in_list(l, tgt):
    first = 0
    last = len(l) - 1
    while first <= last:
        mid = int((last + first) / 2)
        if l[mid] == tgt:
            return True
        elif l[mid] < tgt:
            first = mid + 1
        elif l[mid] > tgt:
            last = mid - 1
    return False

def test_target_is_in_list() -> None:
    result = target_is_in_list(arr, to_find)
    print(result)

################################################################################

def get_index_of_target(l: list[int], tgt: int) -> int:
    fist = 0
    mid = int((first + last)) / 2
    last = len(l) - 1
    while first < last:
        if l[mid] == tgt:
            return mid
        elif l[mid] < tgt:
            first = mid + 1
        elif l[mid] > tgt:
            last = mid - 1

def test_get_index_of_target() -> None:
    idx_tgt = get_index_of_target(arr, to_find)
    print(idx_tgt)

################################################################################
#                                Run Tests                                     #
################################################################################
test_get_index_of_target()

---

I want to create a `Binary_Search` class who's methods include the above functions.
